plugins {
    id 'java'
    id 'io.qameta.allure' version "3.0.0"
    id 'io.freefair.lombok' version '9.0.0'
}

repositories {
    mavenCentral()
}

def selenideVersion = "7.0.0",
    restAssuredVersion = "5.5.0",
    allureVersion = "2.21.0",
    junitVersion = "5.10.0",
    slf4jVersion = "2.0.7",
    ownerVersion = "1.0.12"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.aeonbits.owner:owner:$ownerVersion"
    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// ОБЩАЯ конфигурация для ВСЕХ тестов
tasks.withType(Test) {
    systemProperty "file.encoding", "UTF-8"
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

// Конкретные задачи ТОЛЬКО с их специфичной конфигурацией
tasks.register('newTests', Test) {
    useJUnitPlatform {
        includeTags("new")
    }
}

tasks.register('oldTests', Test) {
    useJUnitPlatform {
        includeTags("old")
    }
}

// Основная задача test
test {
    useJUnitPlatform()
}